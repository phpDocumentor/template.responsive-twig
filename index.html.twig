{% extends 'layout.html.twig' %}

{% import 'base/macros.html.twig' as macros %}

{% block heroUnit %}
    <div class="hero-unit">
        <h1>{{ project.name|raw }}</h1>
        <h2>Documentation</h2>
    </div>
{% endblock %}

{% block content %}
    <div class="row">
        <div class="span7">
            {% if project.indexes.namespaces|length > 0 or not project.indexes.packages %}
                <div class="well">
                    <ul class="nav nav-list">
                        <li class="nav-header">Namespaces</li>
                        {% block listRootNamespaces %}
                            <li><a href="{{ path(project.namespace) }}">Global ({{ project.namespace.name }})</a></li>
                            {% for namespace in project.namespace.children|sort_asc %}
                                <li><a href="{{ path(namespace) }}">{{ namespace.name }}</a></li>
                            {% endfor %}
                        {% endblock %}
                    </ul>
                </div>
            {% endif %}

            {% if project.indexes.packages|length > 0 %}
                <div class="well">
                    <ul class="nav nav-list">
                        <li class="nav-header">Packages</li>
                        {% block listRootPackages %}
                            <li><a href="{{ path(project.indexes.packages|first) }}">Global ({{ (project.indexes.packages|first).name }})</a></li>
                            {% for package in (project.indexes.packages|first).children|sort_asc %}
                                <li><a href="{{ path(package) }}">{{ package.name }}</a></li>
                            {% endfor %}
                        {% endblock %}
                    </ul>
                </div>
            {% endif %}

        </div>
        <div class="span5">
            <div class="well">
                <ul class="nav nav-list">
                    <li class="nav-header">Statistics</li>
                    {% block renderStatistics %}
                        <div id="statistics"></div>
                        <hr />
                        <div class="btn btn-small btn-info">Reset Zoom</div>
                    {% endblock %}
                </ul>
            </div>
            <div class="well">
                <ul class="nav nav-list">
                    <li class="nav-header">Charts</li>
                    {% block listCharts %}
                        <li><a href="{{ path('graph_class.html') }}"><i class="icon-list-alt"></i> Class inheritance diagram</a></li>
                    {% endblock %}
                </ul>
            </div>
            <div class="well">
                <ul class="nav nav-list">
                    <li class="nav-header">Reports</li>
                    {% block listReports %}
                        <li>
                            <a href="{{ path('errors.html') }}">
                                <i class="icon-list-alt"></i> Errors {{ macros.renderErrorCounter(project.files) }}
                            </a>
                        </li>
                        <li>
                            <a href="{{ path('deprecated.html') }}">
                                <i class="icon-list-alt"></i> Deprecated {{ macros.renderDeprecatedCounter(project.indexes.elements) }}
                            </a>
                        </li>
                        <li>
                            <a href="{{ path('markers.html') }}">
                                <i class="icon-list-alt"></i> Markers {{ macros.renderMarkerCounter(project.files) }}
                            </a>
                        </li>
                    {% endblock %}
                </ul>
            </div>
        </div>
    </div>
    {% block statistics %}
        <script type="text/javaScript">
        $(document).ready(function(){
          var ajaxDataRenderer = function(url, plot, options) {
            var stats = null;
            $.ajax({
              async: false,
              url: url,
              dataType:"xml",
              success: function(data) {
                stats = $.xml2json(data);

                var deprecated = [], item;
                var errors = [], item;
                var markers = [], item;
                var datestring = [], item;

                $.each(stats.stat, function(key, value){
                    var datestr = value.date;
                    var yy   = datestr.substring(0,4);
                    var mo   = datestr.substring(5,7);
                    var dd   = datestr.substring(8,10);
                    var hh   = datestr.substring(11,13);
                    var mi   = datestr.substring(14,16);
                    var ss   = datestr.substring(17,19);
                    var tzs  = datestr.substring(19,20);
                    var tzhh = datestr.substring(20,22);
                    var tzmi = datestr.substring(23,25);
                    var myutc = Date.UTC(yy-0,mo-1,dd-0,hh-0,mi-0,ss-0);
                    var tzos = (tzs+(tzhh * 60 + tzmi * 1)) * 60000;
                    date = new Date(myutc-tzos);
                    
                    deprecated.push([date.toString(), parseFloat(value.counters.deprecated)]);
                    errors.push([date.toString(), parseFloat(value.counters.errors)]);
                    markers.push([date.toString(), parseFloat(value.counters.markers)]);
                });

                var ret = [], item;
                ret.push(deprecated, errors, markers);

                stats = ret;
              }
            });
            
            return stats;
          };
         
          var xmlurl = "{{ path('phpdoc-stats.xml') }}";
          var xml = ajaxDataRenderer(xmlurl);
          var statistics = $.jqplot('statistics', xmlurl,{
                dataRenderer: ajaxDataRenderer,
                series:[
                    {'label': 'deprecated', 'color' : '#0000FF'},
                    {'label': 'errors', 'color' : '#FF0000'},
                    {'label': 'markers', 'color' : '#FFFF00'}],
                axes: {
                    xaxis: {
                        renderer: $.jqplot.DateAxisRenderer,
                        rendererOptions:{
                            tickRenderer:$.jqplot.CanvasAxisTickRenderer
                        },
                        tickOptions: {
                            formatString: '%Y-%#m-%#d',
                            angle:-40,
                            fontSize: '10px',
                            fontFamily: ["Helvetica Neue","Helvetica","Arial","sans-serif"]
                        },
                        tickInterval: '1 week',
                        min: xml[0][0][0],
                        max: xml[0][xml[0].length-1][0]
                    },
                    yaxis: {
                        tickOptions: { formatString: '%.0f' },
                        min: 0
                    }
                },
                cursor:{
                    show: true,
                    zoom: true,
                    showTooltip: true,
                    tooltipLocation: 'ne'
                },
                axesDefaults: {
                    useSeriesColor: true,
                    labelRenderer: $.jqplot.CanvasAxisLabelRenderer
                },
                seriesDefaults: {
                    lineWidth: 2,
                    style: 'square'
                },
                legend: {
                    renderer: $.jqplot.EnhancedLegendRenderer,
                    show: true,
                    showLabels: true,
                    location: 'n',
                    placement: 'outside',
                    fontSize: '10px',
                    fontFamily: ["Helvetica Neue","Helvetica","Arial","sans-serif"],
                    rendererOptions: {
                        numberRows: '1',
                        numberColumns: '3',
                        seriesToggle: 'normal'
                    }
                }
          });
          $('.btn').click(function() { statistics.resetZoom() });
        });
        </script>
    {% endblock %}
{% endblock %}
